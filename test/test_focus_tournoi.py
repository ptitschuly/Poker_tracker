#!/usr/bin/env python3
"""
Script de test pour la fonctionnalit√© de focus sur les tournois.
Ce script teste les nouvelles fonctions sans interface graphique.
"""

import sys
import os
import tempfile

# Ajouter le r√©pertoire courant au path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from recapitulatif_tournoi import extraire_details_tournoi, analyser_resultats_tournois
from Tracker_poker.recapitulatif_tournament import extraire_details_expresso, analyser_resultats_expresso

def test_tournament_details():
    """Test la fonctionnalit√© d'extraction des d√©tails de tournoi"""
    print("=== Test des d√©tails de tournoi ===")
    
    # Cr√©er un fichier de test temporaire
    sample_content = """Winamax Poker - Tournament "Test Tournament" buyIn: 5.00‚Ç¨ + 0.50‚Ç¨ level: 0 - HandId: #123456789-123-1234567890 - Holdem no limit (50/100) - 2024/01/15 20:00:00 UTC
Table: 'Tournament Table' 2-max (real money) Seat #1 is the button
Seat 1: Hero (1500)
Seat 2: Villain (1500)

*** ANTE/BLINDS ***
Hero posts small blind 50
Villain posts big blind 100

*** PRE-FLOP ***
Hero: deals [Ah Kh]
Hero: raises 100 to 200
Villain: calls 100

*** FLOP *** [As 7h 2c]
Villain: checks
Hero: bets 150
Villain: calls 150

*** TURN *** [As 7h 2c][Tc]
Villain: checks 
Hero: bets 300
Villain: folds
Hero: doesn't show hand
Hero collected 800 from pot

*** SUMMARY ***
Buy-in: 5.50‚Ç¨
You won: 10.00‚Ç¨
Result: +4.50‚Ç¨
Duration: 8 minutes
Final Position: 1st"""

    with tempfile.NamedTemporaryFile(mode='w', suffix='_summary.txt', delete=False) as f:
        f.write(sample_content)
        temp_file = f.name
    
    try:
        # Test extraction des d√©tails
        details = extraire_details_tournoi(temp_file)
        
        print(f"‚úì Fichier: {details['fichier']}")
        print(f"‚úì Buy-in: {details['buy_in']:.2f}‚Ç¨")
        print(f"‚úì Gains: {details['gains']:.2f}‚Ç¨")
        print(f"‚úì Net: {details['net']:+.2f}‚Ç¨")
        print(f"‚úì Dur√©e: {details['duree']}")
        print(f"‚úì Position: {details['position_finale']}")
        print(f"‚úì Nombre de mains: {details['nombre_mains']}")
        
        for i, main in enumerate(details['mains']):
            print(f"  Main {i+1}: {main['cartes_hero']} -> {main['action_hero']} -> {main['resultat']:.0f}")
        
        print("‚úì Test des d√©tails de tournoi r√©ussi!\n")
        return True
        
    except Exception as e:
        print(f"‚úó Erreur dans le test des d√©tails de tournoi: {e}")
        return False
    finally:
        os.unlink(temp_file)

def test_expresso_details():
    """Test la fonctionnalit√© d'extraction des d√©tails d'expresso"""
    print("=== Test des d√©tails d'expresso ===")
    
    sample_content = """Winamax Poker - Tournament "Expresso No Limit Hold'em" buyIn: 2.00‚Ç¨ + 0.20‚Ç¨ level: 0 - HandId: #987654321-456-9876543210 - Holdem no limit (10/20) - 2024/01/15 21:00:00 UTC
Table: 'Expresso Table' 3-max (real money) Seat #1 is the button
Seat 1: Hero (1000)
Seat 2: Player2 (1000)
Seat 3: Player3 (1000)

*** ANTE/BLINDS ***
Player2 posts small blind 10
Player3 posts big blind 20

*** PRE-FLOP ***
Hero: shows [Ac As]
Hero: raises 980 to 1000 and is all-in
Player2: calls 990 and is all-in
Player3: folds
Hero: shows [Ac As]
Player2: shows [Kd Kh]

*** FLOP *** [4h 7s 9c]
*** TURN *** [4h 7s 9c][Ad]
*** RIVER *** [4h 7s 9c Ad][2h]

Hero wins 2020 with three of a kind, Aces

*** SUMMARY ***
Buy-in: 2.20‚Ç¨
You won: 6.00‚Ç¨
Result: +3.80‚Ç¨
Duration: 4 minutes
Final Position: 1st"""

    with tempfile.NamedTemporaryFile(mode='w', suffix='_Expresso_summary.txt', delete=False) as f:
        f.write(sample_content)
        temp_file = f.name
    
    try:
        # Test extraction des d√©tails
        details = extraire_details_expresso(temp_file)
        
        print(f"‚úì Fichier: {details['fichier']}")
        print(f"‚úì Buy-in: {details['buy_in']:.2f}‚Ç¨")
        print(f"‚úì Gains: {details['gains']:.2f}‚Ç¨")
        print(f"‚úì Net: {details['net']:+.2f}‚Ç¨")
        print(f"‚úì Dur√©e: {details['duree']}")
        print(f"‚úì Position: {details['position_finale']}")
        print(f"‚úì Nombre de mains: {details['nombre_mains']}")
        
        for i, main in enumerate(details['mains']):
            print(f"  Main {i+1}: {main['cartes_hero']} -> {main['action_hero']} -> {main['resultat']:.0f}")
        
        print("‚úì Test des d√©tails d'expresso r√©ussi!\n")
        return True
        
    except Exception as e:
        print(f"‚úó Erreur dans le test des d√©tails d'expresso: {e}")
        return False
    finally:
        os.unlink(temp_file)

def test_integration():
    """Test d'int√©gration avec analyse compl√®te"""
    print("=== Test d'int√©gration ===")
    
    with tempfile.TemporaryDirectory() as temp_dir:
        # Cr√©er quelques fichiers de test
        tournament_content = """Winamax Poker - Tournament "Test" buyIn: 5.00‚Ç¨ + 0.50‚Ç¨
*** SUMMARY ***
Buy-in: 5.50‚Ç¨
You won: 10.00‚Ç¨"""
        
        expresso_content = """Winamax Poker - Tournament "Expresso Test" buyIn: 2.00‚Ç¨ + 0.20‚Ç¨  
*** SUMMARY ***
Buy-in: 2.20‚Ç¨
You won: 6.00‚Ç¨"""
        
        # √âcrire les fichiers
        with open(os.path.join(temp_dir, "2024-01-15_Tournament_123_summary.txt"), 'w') as f:
            f.write(tournament_content)
        
        with open(os.path.join(temp_dir, "2024-01-15_Expresso_456_summary.txt"), 'w') as f:
            f.write(expresso_content)
        
        try:
            # Test analyse tournois
            results_tournois = analyser_resultats_tournois(temp_dir)
            print(f"‚úì Analyse tournois: {results_tournois['nombre_tournois']} tournoi(s) trouv√©(s)")
            
            # Test analyse expressos
            results_expressos = analyser_resultats_expresso(temp_dir)  
            print(f"‚úì Analyse expressos: {results_expressos['nombre_expressos']} expresso(s) trouv√©(s)")
            
            print("‚úì Test d'int√©gration r√©ussi!\n")
            return True
            
        except Exception as e:
            print(f"‚úó Erreur dans le test d'int√©gration: {e}")
            return False

if __name__ == "__main__":
    print("Lancement des tests pour la fonctionnalit√© de focus sur les tournois...\n")
    
    tests = [
        test_tournament_details,
        test_expresso_details,
        test_integration
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        if test():
            passed += 1
    
    print(f"=== R√©sultats des tests ===")
    print(f"Tests r√©ussis: {passed}/{total}")
    
    if passed == total:
        print("üéâ Tous les tests sont pass√©s!")
        sys.exit(0)
    else:
        print("‚ùå Certains tests ont √©chou√©")
        sys.exit(1)